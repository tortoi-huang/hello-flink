import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

apply plugin: 'com.gradleup.shadow'

ext{
    flinkVersion = "1.20.0"
}
/*configurations {
    runtime.exclude group "com.fasterxml.jackson.core" model "jackson-databind"
    compile.exclude group "com.fasterxml.jackson.core" model "jackson-databind"
}*/
dependencies {
    implementation "org.apache.flink:flink-core:${flinkVersion}"
    implementation "org.apache.flink:flink-java:${flinkVersion}"
    implementation "org.apache.flink:flink-connectors:${flinkVersion}"
    implementation "org.apache.flink:flink-connector-files:${flinkVersion}"
    implementation "org.apache.flink:flink-streaming-java:${flinkVersion}"
    implementation "org.apache.flink:flink-clients:${flinkVersion}"
    implementation "org.apache.flink:flink-table-api-java:${flinkVersion}"
    implementation "org.apache.flink:flink-runtime-web:${flinkVersion}"
    implementation "org.apache.logging.log4j:log4j-api:2.17.1"
    implementation ("org.apache.logging.log4j:log4j-core:2.17.1") {
        exclude group: "junit", module: "junit"
    }
    implementation "org.apache.logging.log4j:log4j-slf4j-impl:2.17.1"
    // https://mvnrepository.com/artifact/org.apache.flink/flink-shaded-guava
    // implementation 'org.apache.flink:flink-shaded-guava:31.1-jre-17.0'
    implementation ("com.ververica:flink-connector-mysql-cdc:3.0.1") {
        exclude group: "com.fasterxml.jackson.core", module: "jackson-databind"
        //exclude group: "org.apache.kafka", module: "kafka-clients"
    }
    implementation "com.fasterxml.jackson.core:jackson-databind:2.13.4.2"
    implementation "org.apache.kafka:kafka-clients:3.2.3"
    testImplementation "junit:junit:4.13.1"
}

tasks.named('shadowJar', ShadowJar) {
//    minimize()
    dependencies {
//        exclude(dependency('org.apache.flink:.*'))
        include(dependency('com.ververica:.*'))
        include(dependency('io.debezium:.*'))
        include(dependency('mysql:.*'))
        include(dependency('com.zendesk:.*'))
        include(dependency('com.zaxxer:.*'))
        include(dependency('com.esri.geometry:.*'))
//        include(dependency('org.apache.flink:flink-shaded-guava:.*'))
        include(dependency('org.apache.kafka:.*'))
        include(dependency('org.antlr:.*'))
        include(dependency('com.fasterxml.jackson.core:.*'))
        exclude 'log4j2.properties'
        exclude 'logback.xml'
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'org.huang.flink.cdc.mysql.Main'
        //attributes 'program-class': 'org.huang.flink.cdc.mysql.Main'
    }
}
/*
tasks.register('fatJar', Jar) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes 'Main-Class': 'org.huang.flink.cdc.mysql.Main'
    }
    archiveClassifier = "all"
    from {
        //configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}*/
